"use strict";(self.webpackChunkdocs_rn_template_by_nh=self.webpackChunkdocs_rn_template_by_nh||[]).push([[813],{3905:(e,t,o)=>{o.d(t,{Zo:()=>p,kt:()=>h});var r=o(7294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function s(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function a(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)o=i[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)o=i[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var c=r.createContext({}),u=function(e){var t=r.useContext(c),o=t;return e&&(o="function"==typeof e?e(t):s(s({},t),e)),o},p=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),m=u(o),h=n,d=m["".concat(c,".").concat(h)]||m[h]||l[h]||i;return o?r.createElement(d,s(s({ref:t},p),{},{components:o})):r.createElement(d,s({ref:t},p))}));function h(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=o.length,s=new Array(i);s[0]=m;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:n,s[1]=a;for(var u=2;u<i;u++)s[u]=o[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,o)}m.displayName="MDXCreateElement"},1087:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>i,metadata:()=>a,toc:()=>u});var r=o(7462),n=(o(7294),o(3905));const i={sidebar_position:2},s="Git hooks",a={unversionedId:"features/githooks",id:"features/githooks",title:"Git hooks",description:"Please note that supporting githooks using husky comes by default with our template.",source:"@site/docs/features/githooks.md",sourceDirName:"features",slug:"/features/githooks",permalink:"/react-native-template-by-nh/docs/features/githooks",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/features/githooks.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Project structure",permalink:"/react-native-template-by-nh/docs/features/project-structure"},next:{title:"Design system",permalink:"/react-native-template-by-nh/docs/features/design-system"}},c={},u=[{value:"Add scripts to run with git hooks:",id:"add-scripts-to-run-with-git-hooks",level:2},{value:"Sources:",id:"sources",level:2}],p={toc:u};function l(e){let{components:t,...o}=e;return(0,n.kt)("wrapper",(0,r.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"git-hooks"},"Git hooks"),(0,n.kt)("admonition",{title:"Note",type:"note"},(0,n.kt)("p",{parentName:"admonition"},"Please note that supporting githooks using husky comes by default with our template.")),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks#_client_side_hooks"},"Git hooks")," are scripts that may be programmed to execute at specific times during the Git lifecycle. These occur at various commit stages, such as the pre-commit and post-commit phases (post-commit)."),(0,n.kt)("p",null,"These are beneficial because they enable programmers to execute custom\xa0tasks or even enforce standards by automating the execution of other scripts."),(0,n.kt)("p",null,"In order to execute these scripts, there is a fantastic library which provides easy configuration called ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/typicode/husky"},"Husky"),"."),(0,n.kt)("p",null,"Please read the next paragraph in order to know how to add your scripts to be used by git-hooks."),(0,n.kt)("h2",{id:"add-scripts-to-run-with-git-hooks"},"Add scripts to run with git hooks:"),(0,n.kt)("p",null,"In this example we will run ",(0,n.kt)("inlineCode",{parentName:"p"},"commit lint")," for the commit message and run ",(0,n.kt)("inlineCode",{parentName:"p"},"test")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"lint")," commands in the pre-commit phase."),(0,n.kt)("p",null,"you just need to create the following files that will help you execute these commands:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh",metastring:'title=".husky/commit-msg"',title:'".husky/commit-msg"'},'#!/bin/sh\n. "$(dirname "$0")/_/husky.sh"\nnpx --no -- commitlint --edit ""\n')),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh",metastring:'title=".husky/pre-commit"',title:'".husky/pre-commit"'},'#!/bin/sh\n. "$(dirname "$0")/_/husky.sh"\nyarn lint\nyarn test\n')),(0,n.kt)("p",null,"If you want to run more commands you just need to add them to the files above or create a new file for running a script in a different phase of git cycle."),(0,n.kt)("h2",{id:"sources"},"Sources:"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks#_client_side_hooks"},"https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks#","_","client_side_hooks")),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/typicode/husky"},"https://github.com/typicode/husky")),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/conventional-changelog/commitlint"},"https://github.com/conventional-changelog/commitlint")))}l.isMDXComponent=!0}}]);