"use strict";(self.webpackChunkdocs_rn_template_by_nh=self.webpackChunkdocs_rn_template_by_nh||[]).push([[44],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return n?a.createElement(h,s(s({ref:t},c),{},{components:n})):a.createElement(h,s({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var p=2;p<i;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5323:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:3},s="Design system",o={unversionedId:"features/design-system",id:"features/design-system",title:"Design system",description:"Styled components:",source:"@site/docs/features/design-system.md",sourceDirName:"features",slug:"/features/design-system",permalink:"/react-native-template-by-nh/docs/features/design-system",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/features/design-system.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Git hooks",permalink:"/react-native-template-by-nh/docs/features/githooks"},next:{title:"Generate New Screen",permalink:"/react-native-template-by-nh/docs/features/new-screen"}},l={},p=[{value:"Styled components:",id:"styled-components",level:2},{value:"Responsive design:",id:"responsive-design",level:2},{value:"Theme:",id:"theme",level:2},{value:"Sources:",id:"sources",level:2}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"design-system"},"Design system"),(0,r.kt)("h2",{id:"styled-components"},"Styled components:"),(0,r.kt)("p",null,"In our template we are using styled-components, we chose this library for multiple reasons:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Cleaner code"),": styled-components allow you to name each component with the it's purpose. For instance if we have a ",(0,r.kt)("inlineCode",{parentName:"p"},"<Text>"),"component as title, we can name our component ",(0,r.kt)("inlineCode",{parentName:"p"},"<Title>"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Simple dynamic styling"),": Styled components helps you to add variables into your css and have dynamic styling with ease.\n",(0,r.kt)("inlineCode",{parentName:"p"},"Example:")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"const Button = styled(TouchableOpacity)<{isDisabled: boolean}>(\n  ({isDisabled}) => ({\n     opacity: isDisabled ? 0.5 : 1,\n  }),\n);\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Painless maintenance"),": you never have to hunt across different files to find the styling affecting your component, so maintenance is a piece of cake no matter how big your codebase is.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Custom theme"),": You can define your custom theme, and you have access to it through props."))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Example:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"const Button = styled(TouchableOpacity)<{isDisabled: boolean}>(\n  ({theme:{ spacingValues }}) => ({\n     paddingHorizontal: spacingValues.vXl,\n  }),\n);\n")),(0,r.kt)("h2",{id:"responsive-design"},"Responsive design:"),(0,r.kt)("p",null,"One of the main issues that we are facing is design is not consistent between all phone sizes, which may have an impact on user experience."),(0,r.kt)("p",null,"For this purpose we adapted the approach used in this library:\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/nirsky/react-native-size-matters"},"react-native-size-matters")),(0,r.kt)("p",null,"basically in our theme we have two functions that scale the size based on the length and width of the device."),(0,r.kt)("p",null,"For example:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If we're going to use a vertical size, such as ",(0,r.kt)("inlineCode",{parentName:"li"},"paddingTop")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"marginBottom")," , we use the function ",(0,r.kt)("inlineCode",{parentName:"li"},"verticalScale(16)")," to get the right size that we should have based on the height of the screen."),(0,r.kt)("li",{parentName:"ul"},"If we're going to use horizontal size such as ",(0,r.kt)("inlineCode",{parentName:"li"},"paddingRight"),", we use the function ",(0,r.kt)("inlineCode",{parentName:"li"},"horizontalScale(16)"),".")),(0,r.kt)("p",null,"Here is the definition of the two functions:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh",metastring:'title="src/ui/theme/scaling.ts"',title:'"src/ui/theme/scaling.ts"'},"\nimport {Dimensions} from 'react-native';\n\nexport const {width, height} = Dimensions.get('window');\n//Guideline sizes are based on standard around 5 inches screen mobile device\nexport const guidelineBaseWidth = 326;\n\nexport const guidelineBaseHeight = 680;\n\n// Will return a linear scaled result of the provided size, based on your device's screen width.\nexport const horizontalScale = (size: number): number =>\n  parseFloat(((width / guidelineBaseWidth) * size).toFixed(2));\n\n// Will return a linear scaled result of the provided size, based on your device's screen height.\nexport const verticalScale = (size: number): number =>\n  parseFloat(((height / guidelineBaseHeight) * size).toFixed(2));\n\n")),(0,r.kt)("h2",{id:"theme"},"Theme:"),(0,r.kt)("p",null,"In our template the theme comes created by default but you can change it the way you want to fit your design system.\nyou can find the template here ",(0,r.kt)("inlineCode",{parentName:"p"},"src/ui/theme/index.ts"),"."),(0,r.kt)("p",null,"Also make sure you update the typing for your template in this file: ",(0,r.kt)("inlineCode",{parentName:"p"},"src/types/styled.d.ts")),(0,r.kt)("h2",{id:"sources"},"Sources:"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://styled-components.com/docs/basics#motivation"},"Styled components")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/nirsky/react-native-size-matters"},"react-native-size-matters")))}u.isMDXComponent=!0}}]);